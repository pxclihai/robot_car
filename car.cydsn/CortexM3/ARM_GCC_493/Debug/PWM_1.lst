ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_1_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PWM_1_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_1_Enable, %function
  24              	PWM_1_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** 
  26:.\Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_1.c **** 
  34:.\Generated_Source\PSoC5/PWM_1.c **** 
  35:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_1.c **** *
  44:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_1.c **** *
  47:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_1.c **** *
  50:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_1.c **** *
  54:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_1.c **** {
  57:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:.\Generated_Source\PSoC5/PWM_1.c ****     {
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  61:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  62:.\Generated_Source\PSoC5/PWM_1.c ****     }
  63:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  64:.\Generated_Source\PSoC5/PWM_1.c **** 
  65:.\Generated_Source\PSoC5/PWM_1.c **** }
  66:.\Generated_Source\PSoC5/PWM_1.c **** 
  67:.\Generated_Source\PSoC5/PWM_1.c **** 
  68:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC5/PWM_1.c **** *
  77:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_1.c **** *
  80:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_1.c **** *
  83:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_1.c **** {
  86:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_1.c **** 
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_1.c **** 
  97:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_1.c **** 
 104:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_1.c **** 
 107:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC5/PWM_1.c **** 
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_1.c **** 
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_1.c **** 
 123:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_1.c **** 
 133:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_1.c **** 
 136:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/PWM_1.c **** 
 138:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_1.c **** 
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_1.c **** 
 149:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_1.c **** 
 153:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_1.c **** 
 157:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_1.c **** 
 165:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_1.c **** 
 171:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC5/PWM_1.c **** 
 174:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_1.c **** }
 180:.\Generated_Source\PSoC5/PWM_1.c **** 
 181:.\Generated_Source\PSoC5/PWM_1.c **** 
 182:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_1.c **** *
 195:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_1.c **** *
 198:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_1.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 77640040 		.word	1073767543
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_1_Enable, .-PWM_1_Enable
  45              		.section	.text.PWM_1_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PWM_1_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_1_Stop, %function
  51              	PWM_1_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_1.c **** }
 212:.\Generated_Source\PSoC5/PWM_1.c **** 
 213:.\Generated_Source\PSoC5/PWM_1.c **** 
 214:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_1.c **** *
 218:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_1.c **** *
 225:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_1.c **** *
 228:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_1.c **** *
 232:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 6


 234:.\Generated_Source\PSoC5/PWM_1.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 77640040 		.word	1073767543
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_1_Stop, .-PWM_1_Stop
  71              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_1_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_1_WriteCounter, %function
  77              	PWM_1_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_1.c **** 
 239:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_1.c **** }
 245:.\Generated_Source\PSoC5/PWM_1.c **** 
 246:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_1.c **** 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 
 250:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_1.c ****         *
 254:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_1.c ****         *
 258:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_1.c ****         *
 262:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 7


 265:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_1.c ****         {
 268:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_1.c **** 
 270:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_1.c **** 
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_1.c **** 
 279:.\Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC5/PWM_1.c **** 
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_1.c **** 
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_1.c **** 
 295:.\Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_1.c ****         }
 304:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_1.c **** 
 306:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_1.c **** 
 308:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_1.c **** 
 310:.\Generated_Source\PSoC5/PWM_1.c **** 
 311:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_1.c ****         *
 315:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_1.c ****         *
 318:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 8


 322:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_1.c ****         *
 325:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_1.c ****         {
 328:.\Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_1.c **** 
 335:.\Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_1.c ****         }
 340:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_1.c **** 
 342:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_1.c **** 
 344:.\Generated_Source\PSoC5/PWM_1.c **** 
 345:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *
 349:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *
 352:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_1.c ****     *
 356:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_1.c ****     *
 359:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_1.c ****     {
 362:.\Generated_Source\PSoC5/PWM_1.c **** 
 363:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_1.c **** 
 370:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_1.c ****     }
 375:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 9


 379:.\Generated_Source\PSoC5/PWM_1.c **** 
 380:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_1.c **** 
 382:.\Generated_Source\PSoC5/PWM_1.c **** 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_1.c ****     *
 399:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_1.c ****     *
 402:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_1.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 06640040 		.word	1073767430
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  96              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_1_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_1_ReadCounter, %function
 102              	PWM_1_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/PWM_1.c ****     }
 408:.\Generated_Source\PSoC5/PWM_1.c **** 
 409:.\Generated_Source\PSoC5/PWM_1.c **** 
 410:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 10


 411:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *
 414:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_1.c ****     *
 421:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_1.c ****     *
 424:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_1.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:.\Generated_Source\PSoC5/PWM_1.c ****     }
 115              		.loc 1 434 0
 116 0008 7047     		bx	lr
 117              	.L12:
 118 000a 00BF     		.align	2
 119              	.L11:
 120 000c 16640040 		.word	1073767446
 121 0010 56640040 		.word	1073767510
 122              		.cfi_endproc
 123              	.LFE5:
 124              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 125              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 126              		.align	2
 127              		.global	PWM_1_WritePeriod
 128              		.thumb
 129              		.thumb_func
 130              		.type	PWM_1_WritePeriod, %function
 131              	PWM_1_WritePeriod:
 132              	.LFB7:
 435:.\Generated_Source\PSoC5/PWM_1.c **** 
 436:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_1.c **** 
 438:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 11


 439:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_1.c ****         *
 443:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_1.c ****         *
 446:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_1.c ****         *
 449:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_1.c ****         *
 452:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_1.c ****         {
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_1.c ****             {
 457:.\Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_1.c ****             }
 459:.\Generated_Source\PSoC5/PWM_1.c ****         }
 460:.\Generated_Source\PSoC5/PWM_1.c **** 
 461:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_1.c **** 
 463:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_1.c **** 
 465:.\Generated_Source\PSoC5/PWM_1.c **** 
 466:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_1.c **** *
 470:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_1.c **** *
 474:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_1.c **** *
 478:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_1.c **** *
 481:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC5/PWM_1.c **** {
 133              		.loc 1 483 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL1:
 484:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 139              		.loc 1 487 0
 140 0000 014B     		ldr	r3, .L14
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 12


 141 0002 1870     		strb	r0, [r3]
 142 0004 7047     		bx	lr
 143              	.L15:
 144 0006 00BF     		.align	2
 145              	.L14:
 146 0008 46640040 		.word	1073767494
 147              		.cfi_endproc
 148              	.LFE7:
 149              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 150              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 151              		.align	2
 152              		.global	PWM_1_WriteCompare1
 153              		.thumb
 154              		.thumb_func
 155              		.type	PWM_1_WriteCompare1, %function
 156              	PWM_1_WriteCompare1:
 157              	.LFB8:
 488:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_1.c **** }
 490:.\Generated_Source\PSoC5/PWM_1.c **** 
 491:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_1.c **** 
 493:.\Generated_Source\PSoC5/PWM_1.c **** 
 494:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_1.c ****     *
 498:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_1.c ****     *
 508:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_1.c ****     *
 511:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_1.c ****     *
 515:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_1.c ****     {
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_1.c **** 
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 13


 528:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_1.c ****     }
 533:.\Generated_Source\PSoC5/PWM_1.c **** 
 534:.\Generated_Source\PSoC5/PWM_1.c **** 
 535:.\Generated_Source\PSoC5/PWM_1.c **** #else
 536:.\Generated_Source\PSoC5/PWM_1.c **** 
 537:.\Generated_Source\PSoC5/PWM_1.c **** 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_1.c ****     *
 551:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_1.c ****     *
 554:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_1.c ****     {
 158              		.loc 1 557 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL2:
 558:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 164              		.loc 1 561 0
 165 0000 014B     		ldr	r3, .L17
 166 0002 1870     		strb	r0, [r3]
 167 0004 7047     		bx	lr
 168              	.L18:
 169 0006 00BF     		.align	2
 170              	.L17:
 171 0008 26640040 		.word	1073767462
 172              		.cfi_endproc
 173              	.LFE8:
 174              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 175              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 176              		.align	2
 177              		.global	PWM_1_WriteCompare2
 178              		.thumb
 179              		.thumb_func
 180              		.type	PWM_1_WriteCompare2, %function
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 14


 181              	PWM_1_WriteCompare2:
 182              	.LFB9:
 562:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_1.c ****     }
 564:.\Generated_Source\PSoC5/PWM_1.c **** 
 565:.\Generated_Source\PSoC5/PWM_1.c **** 
 566:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *
 570:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_1.c ****     *
 580:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_1.c ****     *
 583:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_1.c ****     {
 183              		.loc 1 586 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL3:
 587:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 189              		.loc 1 590 0
 190 0000 014B     		ldr	r3, .L20
 191 0002 1870     		strb	r0, [r3]
 192 0004 7047     		bx	lr
 193              	.L21:
 194 0006 00BF     		.align	2
 195              	.L20:
 196 0008 36640040 		.word	1073767478
 197              		.cfi_endproc
 198              	.LFE9:
 199              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 200              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 201              		.align	2
 202              		.global	PWM_1_SetInterruptMode
 203              		.thumb
 204              		.thumb_func
 205              		.type	PWM_1_SetInterruptMode, %function
 206              	PWM_1_SetInterruptMode:
 207              	.LFB10:
 591:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 15


 592:.\Generated_Source\PSoC5/PWM_1.c ****     }
 593:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_1.c **** 
 595:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_1.c **** 
 597:.\Generated_Source\PSoC5/PWM_1.c **** 
 598:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_1.c ****     *
 608:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_1.c ****     *
 611:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_1.c ****     {
 614:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_1.c **** 
 622:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_1.c **** 
 630:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_1.c ****     }
 632:.\Generated_Source\PSoC5/PWM_1.c **** 
 633:.\Generated_Source\PSoC5/PWM_1.c **** 
 634:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_1.c ****     *
 644:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_1.c ****     *
 647:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 16


 649:.\Generated_Source\PSoC5/PWM_1.c ****     {
 650:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_1.c **** 
 655:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_1.c ****     }
 664:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_1.c **** 
 666:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_1.c **** 
 668:.\Generated_Source\PSoC5/PWM_1.c **** 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *
 673:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_1.c ****     *
 680:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_1.c ****     *
 683:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_1.c ****     {
 208              		.loc 1 685 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213              	.LVL4:
 686:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 214              		.loc 1 686 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1870     		strb	r0, [r3]
 217 0004 7047     		bx	lr
 218              	.L24:
 219 0006 00BF     		.align	2
 220              	.L23:
 221 0008 86640040 		.word	1073767558
 222              		.cfi_endproc
 223              	.LFE10:
 224              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 225              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 226              		.align	2
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 17


 227              		.global	PWM_1_ReadStatusRegister
 228              		.thumb
 229              		.thumb_func
 230              		.type	PWM_1_ReadStatusRegister, %function
 231              	PWM_1_ReadStatusRegister:
 232              	.LFB11:
 687:.\Generated_Source\PSoC5/PWM_1.c ****     }
 688:.\Generated_Source\PSoC5/PWM_1.c **** 
 689:.\Generated_Source\PSoC5/PWM_1.c **** 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_1.c ****     *
 697:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *
 700:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_1.c ****     *
 710:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_1.c ****     {
 233              		.loc 1 712 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 238              		.loc 1 713 0
 239 0000 014B     		ldr	r3, .L26
 240 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/PWM_1.c ****     }
 241              		.loc 1 714 0
 242 0004 7047     		bx	lr
 243              	.L27:
 244 0006 00BF     		.align	2
 245              	.L26:
 246 0008 66640040 		.word	1073767526
 247              		.cfi_endproc
 248              	.LFE11:
 249              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 250              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 251              		.align	2
 252              		.global	PWM_1_ReadControlRegister
 253              		.thumb
 254              		.thumb_func
 255              		.type	PWM_1_ReadControlRegister, %function
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 18


 256              	PWM_1_ReadControlRegister:
 257              	.LFB12:
 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC5/PWM_1.c **** 
 721:.\Generated_Source\PSoC5/PWM_1.c **** 
 722:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_1.c ****     *
 726:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_1.c ****     *
 736:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_1.c ****     {
 258              		.loc 1 738 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_1.c **** 
 741:.\Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 263              		.loc 1 741 0
 264 0000 014B     		ldr	r3, .L29
 265 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 266              	.LVL5:
 742:.\Generated_Source\PSoC5/PWM_1.c ****         return (result);
 743:.\Generated_Source\PSoC5/PWM_1.c ****     }
 267              		.loc 1 743 0
 268 0004 7047     		bx	lr
 269              	.L30:
 270 0006 00BF     		.align	2
 271              	.L29:
 272 0008 77640040 		.word	1073767543
 273              		.cfi_endproc
 274              	.LFE12:
 275              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 276              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 277              		.align	2
 278              		.global	PWM_1_WriteControlRegister
 279              		.thumb
 280              		.thumb_func
 281              		.type	PWM_1_WriteControlRegister, %function
 282              	PWM_1_WriteControlRegister:
 283              	.LFB13:
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 19


 744:.\Generated_Source\PSoC5/PWM_1.c **** 
 745:.\Generated_Source\PSoC5/PWM_1.c **** 
 746:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *
 750:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *
 754:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_1.c ****     *
 764:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_1.c ****     {
 284              		.loc 1 766 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289              	.LVL6:
 767:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 290              		.loc 1 767 0
 291 0000 014B     		ldr	r3, .L32
 292 0002 1870     		strb	r0, [r3]
 293 0004 7047     		bx	lr
 294              	.L33:
 295 0006 00BF     		.align	2
 296              	.L32:
 297 0008 77640040 		.word	1073767543
 298              		.cfi_endproc
 299              	.LFE13:
 300              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 301              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 302              		.align	2
 303              		.global	PWM_1_ReadCapture
 304              		.thumb
 305              		.thumb_func
 306              		.type	PWM_1_ReadCapture, %function
 307              	PWM_1_ReadCapture:
 308              	.LFB14:
 768:.\Generated_Source\PSoC5/PWM_1.c ****     }
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_1.c **** 
 775:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 20


 776:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_1.c ****     *
 789:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_1.c ****     {
 309              		.loc 1 791 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 314              		.loc 1 792 0
 315 0000 014B     		ldr	r3, .L35
 316 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:.\Generated_Source\PSoC5/PWM_1.c ****     }
 317              		.loc 1 793 0
 318 0004 7047     		bx	lr
 319              	.L36:
 320 0006 00BF     		.align	2
 321              	.L35:
 322 0008 56640040 		.word	1073767510
 323              		.cfi_endproc
 324              	.LFE14:
 325              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 326              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 327              		.align	2
 328              		.global	PWM_1_ClearFIFO
 329              		.thumb
 330              		.thumb_func
 331              		.type	PWM_1_ClearFIFO, %function
 332              	PWM_1_ClearFIFO:
 333              	.LFB6:
 454:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 334              		.loc 1 454 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 08B5     		push	{r3, lr}
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 3, -8
 341              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/PWM_1.c ****             {
 342              		.loc 1 455 0
 343 0002 01E0     		b	.L38
 344              	.L39:
 457:.\Generated_Source\PSoC5/PWM_1.c ****             }
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 21


 345              		.loc 1 457 0
 346 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 347              	.LVL7:
 348              	.L38:
 455:.\Generated_Source\PSoC5/PWM_1.c ****             {
 349              		.loc 1 455 0
 350 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 351              	.LVL8:
 352 000c 10F0100F 		tst	r0, #16
 353 0010 F8D1     		bne	.L39
 459:.\Generated_Source\PSoC5/PWM_1.c **** 
 354              		.loc 1 459 0
 355 0012 08BD     		pop	{r3, pc}
 356              		.cfi_endproc
 357              	.LFE6:
 358              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 359              		.section	.text.PWM_1_Init,"ax",%progbits
 360              		.align	2
 361              		.global	PWM_1_Init
 362              		.thumb
 363              		.thumb_func
 364              		.type	PWM_1_Init, %function
 365              	PWM_1_Init:
 366              	.LFB1:
  85:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
 367              		.loc 1 85 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 10B5     		push	{r4, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 4, -8
 374              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 375              		.loc 1 117 0
 376 0002 134A     		ldr	r2, .L43
 377 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 378 0006 03F0C003 		and	r3, r3, #192
 379              	.LVL9:
 119:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 380              		.loc 1 119 0
 381 000a 43F00903 		orr	r3, r3, #9
 382              	.LVL10:
 383 000e 1370     		strb	r3, [r2]
 126:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 384              		.loc 1 126 0
 385 0010 104C     		ldr	r4, .L43+4
 386 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 387 0014 43F00103 		orr	r3, r3, #1
 388 0018 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 389              		.loc 1 133 0
 390 001a FF20     		movs	r0, #255
 391 001c FFF7FEFF 		bl	PWM_1_WriteCounter
 392              	.LVL11:
 136:.\Generated_Source\PSoC5/PWM_1.c **** 
 393              		.loc 1 136 0
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 22


 394 0020 FF20     		movs	r0, #255
 395 0022 FFF7FEFF 		bl	PWM_1_WritePeriod
 396              	.LVL12:
 141:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 397              		.loc 1 141 0
 398 0026 7F20     		movs	r0, #127
 399 0028 FFF7FEFF 		bl	PWM_1_WriteCompare1
 400              	.LVL13:
 142:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 401              		.loc 1 142 0
 402 002c 3F20     		movs	r0, #63
 403 002e FFF7FEFF 		bl	PWM_1_WriteCompare2
 404              	.LVL14:
 154:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 405              		.loc 1 154 0
 406 0032 0020     		movs	r0, #0
 407 0034 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 408              	.LVL15:
 167:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 409              		.loc 1 167 0
 410 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 411              	.LVL16:
 169:.\Generated_Source\PSoC5/PWM_1.c **** 
 412              		.loc 1 169 0
 413 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 414 003e 43F01003 		orr	r3, r3, #16
 415 0042 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC5/PWM_1.c **** 
 416              		.loc 1 172 0
 417 0044 FFF7FEFF 		bl	CyExitCriticalSection
 418              	.LVL17:
 176:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 419              		.loc 1 176 0
 420 0048 FFF7FEFF 		bl	PWM_1_ClearFIFO
 421              	.LVL18:
 422 004c 10BD     		pop	{r4, pc}
 423              	.L44:
 424 004e 00BF     		.align	2
 425              	.L43:
 426 0050 77640040 		.word	1073767543
 427 0054 96640040 		.word	1073767574
 428              		.cfi_endproc
 429              	.LFE1:
 430              		.size	PWM_1_Init, .-PWM_1_Init
 431              		.section	.text.PWM_1_Start,"ax",%progbits
 432              		.align	2
 433              		.global	PWM_1_Start
 434              		.thumb
 435              		.thumb_func
 436              		.type	PWM_1_Start, %function
 437              	PWM_1_Start:
 438              	.LFB0:
  56:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
 439              		.loc 1 56 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 23


 443 0000 08B5     		push	{r3, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 3, -8
 446              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/PWM_1.c ****     {
 447              		.loc 1 58 0
 448 0002 054B     		ldr	r3, .L48
 449 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 450 0006 23B9     		cbnz	r3, .L46
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
 451              		.loc 1 60 0
 452 0008 FFF7FEFF 		bl	PWM_1_Init
 453              	.LVL19:
  61:.\Generated_Source\PSoC5/PWM_1.c ****     }
 454              		.loc 1 61 0
 455 000c 0122     		movs	r2, #1
 456 000e 024B     		ldr	r3, .L48
 457 0010 1A70     		strb	r2, [r3]
 458              	.L46:
  63:.\Generated_Source\PSoC5/PWM_1.c **** 
 459              		.loc 1 63 0
 460 0012 FFF7FEFF 		bl	PWM_1_Enable
 461              	.LVL20:
 462 0016 08BD     		pop	{r3, pc}
 463              	.L49:
 464              		.align	2
 465              	.L48:
 466 0018 00000000 		.word	.LANCHOR0
 467              		.cfi_endproc
 468              	.LFE0:
 469              		.size	PWM_1_Start, .-PWM_1_Start
 470              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 471              		.align	2
 472              		.global	PWM_1_ReadCompare1
 473              		.thumb
 474              		.thumb_func
 475              		.type	PWM_1_ReadCompare1, %function
 476              	PWM_1_ReadCompare1:
 477              	.LFB15:
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_1.c **** 
 800:.\Generated_Source\PSoC5/PWM_1.c **** 
 801:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *
 805:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 24


 812:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_1.c ****     *
 815:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_1.c ****     {
 818:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_1.c ****     }
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c **** #else
 826:.\Generated_Source\PSoC5/PWM_1.c **** 
 827:.\Generated_Source\PSoC5/PWM_1.c **** 
 828:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_1.c ****     *
 841:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_1.c ****     {
 478              		.loc 1 843 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 844:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 483              		.loc 1 844 0
 484 0000 014B     		ldr	r3, .L51
 485 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:.\Generated_Source\PSoC5/PWM_1.c ****     }
 486              		.loc 1 845 0
 487 0004 7047     		bx	lr
 488              	.L52:
 489 0006 00BF     		.align	2
 490              	.L51:
 491 0008 26640040 		.word	1073767462
 492              		.cfi_endproc
 493              	.LFE15:
 494              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 495              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 496              		.align	2
 497              		.global	PWM_1_ReadCompare2
 498              		.thumb
 499              		.thumb_func
 500              		.type	PWM_1_ReadCompare2, %function
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 25


 501              	PWM_1_ReadCompare2:
 502              	.LFB16:
 846:.\Generated_Source\PSoC5/PWM_1.c **** 
 847:.\Generated_Source\PSoC5/PWM_1.c **** 
 848:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_1.c ****     *
 861:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_1.c ****     {
 503              		.loc 1 863 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 864:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 508              		.loc 1 864 0
 509 0000 014B     		ldr	r3, .L54
 510 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:.\Generated_Source\PSoC5/PWM_1.c ****     }
 511              		.loc 1 865 0
 512 0004 7047     		bx	lr
 513              	.L55:
 514 0006 00BF     		.align	2
 515              	.L54:
 516 0008 36640040 		.word	1073767478
 517              		.cfi_endproc
 518              	.LFE16:
 519              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 520              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 521              		.align	2
 522              		.global	PWM_1_ReadPeriod
 523              		.thumb
 524              		.thumb_func
 525              		.type	PWM_1_ReadPeriod, %function
 526              	PWM_1_ReadPeriod:
 527              	.LFB17:
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_1.c **** 
 869:.\Generated_Source\PSoC5/PWM_1.c **** 
 870:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 26


 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_1.c **** *
 883:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_1.c **** {
 528              		.loc 1 885 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 0, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 533              		.loc 1 889 0
 534 0000 014B     		ldr	r3, .L57
 535 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_1.c **** }
 536              		.loc 1 891 0
 537 0004 7047     		bx	lr
 538              	.L58:
 539 0006 00BF     		.align	2
 540              	.L57:
 541 0008 46640040 		.word	1073767494
 542              		.cfi_endproc
 543              	.LFE17:
 544              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 545              		.global	PWM_1_initVar
 546              		.bss
 547              		.set	.LANCHOR0,. + 0
 548              		.type	PWM_1_initVar, %object
 549              		.size	PWM_1_initVar, 1
 550              	PWM_1_initVar:
 551 0000 00       		.space	1
 552              		.text
 553              	.Letext0:
 554              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 555              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 556              		.section	.debug_info,"",%progbits
 557              	.Ldebug_info0:
 558 0000 79030000 		.4byte	0x379
 559 0004 0400     		.2byte	0x4
 560 0006 00000000 		.4byte	.Ldebug_abbrev0
 561 000a 04       		.byte	0x4
 562 000b 01       		.uleb128 0x1
 563 000c BE010000 		.4byte	.LASF40
 564 0010 01       		.byte	0x1
 565 0011 70000000 		.4byte	.LASF41
 566 0015 8D020000 		.4byte	.LASF42
 567 0019 00000000 		.4byte	.Ldebug_ranges0+0
 568 001d 00000000 		.4byte	0
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 27


 569 0021 00000000 		.4byte	.Ldebug_line0
 570 0025 02       		.uleb128 0x2
 571 0026 01       		.byte	0x1
 572 0027 06       		.byte	0x6
 573 0028 3A030000 		.4byte	.LASF0
 574 002c 02       		.uleb128 0x2
 575 002d 01       		.byte	0x1
 576 002e 08       		.byte	0x8
 577 002f DE000000 		.4byte	.LASF1
 578 0033 02       		.uleb128 0x2
 579 0034 02       		.byte	0x2
 580 0035 05       		.byte	0x5
 581 0036 7C010000 		.4byte	.LASF2
 582 003a 02       		.uleb128 0x2
 583 003b 02       		.byte	0x2
 584 003c 07       		.byte	0x7
 585 003d 5D000000 		.4byte	.LASF3
 586 0041 02       		.uleb128 0x2
 587 0042 04       		.byte	0x4
 588 0043 05       		.byte	0x5
 589 0044 2C030000 		.4byte	.LASF4
 590 0048 02       		.uleb128 0x2
 591 0049 04       		.byte	0x4
 592 004a 07       		.byte	0x7
 593 004b 02010000 		.4byte	.LASF5
 594 004f 02       		.uleb128 0x2
 595 0050 08       		.byte	0x8
 596 0051 05       		.byte	0x5
 597 0052 C7020000 		.4byte	.LASF6
 598 0056 02       		.uleb128 0x2
 599 0057 08       		.byte	0x8
 600 0058 07       		.byte	0x7
 601 0059 C7000000 		.4byte	.LASF7
 602 005d 03       		.uleb128 0x3
 603 005e 04       		.byte	0x4
 604 005f 05       		.byte	0x5
 605 0060 696E7400 		.ascii	"int\000"
 606 0064 02       		.uleb128 0x2
 607 0065 04       		.byte	0x4
 608 0066 07       		.byte	0x7
 609 0067 63020000 		.4byte	.LASF8
 610 006b 04       		.uleb128 0x4
 611 006c 14010000 		.4byte	.LASF12
 612 0070 02       		.byte	0x2
 613 0071 C2       		.byte	0xc2
 614 0072 2C000000 		.4byte	0x2c
 615 0076 02       		.uleb128 0x2
 616 0077 04       		.byte	0x4
 617 0078 04       		.byte	0x4
 618 0079 B9000000 		.4byte	.LASF9
 619 007d 02       		.uleb128 0x2
 620 007e 08       		.byte	0x8
 621 007f 04       		.byte	0x4
 622 0080 52010000 		.4byte	.LASF10
 623 0084 02       		.uleb128 0x2
 624 0085 01       		.byte	0x1
 625 0086 08       		.byte	0x8
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 28


 626 0087 35030000 		.4byte	.LASF11
 627 008b 05       		.uleb128 0x5
 628 008c EC000000 		.4byte	.LASF13
 629 0090 02       		.byte	0x2
 630 0091 6C01     		.2byte	0x16c
 631 0093 97000000 		.4byte	0x97
 632 0097 06       		.uleb128 0x6
 633 0098 6B000000 		.4byte	0x6b
 634 009c 02       		.uleb128 0x2
 635 009d 04       		.byte	0x4
 636 009e 07       		.byte	0x7
 637 009f BE020000 		.4byte	.LASF14
 638 00a3 07       		.uleb128 0x7
 639 00a4 00000000 		.4byte	.LASF15
 640 00a8 01       		.byte	0x1
 641 00a9 C7       		.byte	0xc7
 642 00aa 00000000 		.4byte	.LFB2
 643 00ae 10000000 		.4byte	.LFE2-.LFB2
 644 00b2 01       		.uleb128 0x1
 645 00b3 9C       		.byte	0x9c
 646 00b4 07       		.uleb128 0x7
 647 00b5 21030000 		.4byte	.LASF16
 648 00b9 01       		.byte	0x1
 649 00ba E9       		.byte	0xe9
 650 00bb 00000000 		.4byte	.LFB3
 651 00bf 10000000 		.4byte	.LFE3-.LFB3
 652 00c3 01       		.uleb128 0x1
 653 00c4 9C       		.byte	0x9c
 654 00c5 08       		.uleb128 0x8
 655 00c6 0D000000 		.4byte	.LASF17
 656 00ca 01       		.byte	0x1
 657 00cb 9301     		.2byte	0x193
 658 00cd 00000000 		.4byte	.LFB4
 659 00d1 0C000000 		.4byte	.LFE4-.LFB4
 660 00d5 01       		.uleb128 0x1
 661 00d6 9C       		.byte	0x9c
 662 00d7 EA000000 		.4byte	0xea
 663 00db 09       		.uleb128 0x9
 664 00dc BF000000 		.4byte	.LASF19
 665 00e0 01       		.byte	0x1
 666 00e1 9301     		.2byte	0x193
 667 00e3 6B000000 		.4byte	0x6b
 668 00e7 01       		.uleb128 0x1
 669 00e8 50       		.byte	0x50
 670 00e9 00       		.byte	0
 671 00ea 0A       		.uleb128 0xa
 672 00eb 0F030000 		.4byte	.LASF26
 673 00ef 01       		.byte	0x1
 674 00f0 A901     		.2byte	0x1a9
 675 00f2 6B000000 		.4byte	0x6b
 676 00f6 00000000 		.4byte	.LFB5
 677 00fa 14000000 		.4byte	.LFE5-.LFB5
 678 00fe 01       		.uleb128 0x1
 679 00ff 9C       		.byte	0x9c
 680 0100 08       		.uleb128 0x8
 681 0101 FD020000 		.4byte	.LASF18
 682 0105 01       		.byte	0x1
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 29


 683 0106 E201     		.2byte	0x1e2
 684 0108 00000000 		.4byte	.LFB7
 685 010c 0C000000 		.4byte	.LFE7-.LFB7
 686 0110 01       		.uleb128 0x1
 687 0111 9C       		.byte	0x9c
 688 0112 25010000 		.4byte	0x125
 689 0116 09       		.uleb128 0x9
 690 0117 30000000 		.4byte	.LASF20
 691 011b 01       		.byte	0x1
 692 011c E201     		.2byte	0x1e2
 693 011e 6B000000 		.4byte	0x6b
 694 0122 01       		.uleb128 0x1
 695 0123 50       		.byte	0x50
 696 0124 00       		.byte	0
 697 0125 08       		.uleb128 0x8
 698 0126 91000000 		.4byte	.LASF21
 699 012a 01       		.byte	0x1
 700 012b 2B02     		.2byte	0x22b
 701 012d 00000000 		.4byte	.LFB8
 702 0131 0C000000 		.4byte	.LFE8-.LFB8
 703 0135 01       		.uleb128 0x1
 704 0136 9C       		.byte	0x9c
 705 0137 4A010000 		.4byte	0x14a
 706 013b 09       		.uleb128 0x9
 707 013c 46030000 		.4byte	.LASF22
 708 0140 01       		.byte	0x1
 709 0141 2B02     		.2byte	0x22b
 710 0143 6B000000 		.4byte	0x6b
 711 0147 01       		.uleb128 0x1
 712 0148 50       		.byte	0x50
 713 0149 00       		.byte	0
 714 014a 08       		.uleb128 0x8
 715 014b A5000000 		.4byte	.LASF23
 716 014f 01       		.byte	0x1
 717 0150 4802     		.2byte	0x248
 718 0152 00000000 		.4byte	.LFB9
 719 0156 0C000000 		.4byte	.LFE9-.LFB9
 720 015a 01       		.uleb128 0x1
 721 015b 9C       		.byte	0x9c
 722 015c 6F010000 		.4byte	0x16f
 723 0160 09       		.uleb128 0x9
 724 0161 46030000 		.4byte	.LASF22
 725 0165 01       		.byte	0x1
 726 0166 4802     		.2byte	0x248
 727 0168 6B000000 		.4byte	0x6b
 728 016c 01       		.uleb128 0x1
 729 016d 50       		.byte	0x50
 730 016e 00       		.byte	0
 731 016f 08       		.uleb128 0x8
 732 0170 22010000 		.4byte	.LASF24
 733 0174 01       		.byte	0x1
 734 0175 AC02     		.2byte	0x2ac
 735 0177 00000000 		.4byte	.LFB10
 736 017b 0C000000 		.4byte	.LFE10-.LFB10
 737 017f 01       		.uleb128 0x1
 738 0180 9C       		.byte	0x9c
 739 0181 94010000 		.4byte	0x194
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 30


 740 0185 09       		.uleb128 0x9
 741 0186 EF020000 		.4byte	.LASF25
 742 018a 01       		.byte	0x1
 743 018b AC02     		.2byte	0x2ac
 744 018d 6B000000 		.4byte	0x6b
 745 0191 01       		.uleb128 0x1
 746 0192 50       		.byte	0x50
 747 0193 00       		.byte	0
 748 0194 0A       		.uleb128 0xa
 749 0195 39010000 		.4byte	.LASF27
 750 0199 01       		.byte	0x1
 751 019a C702     		.2byte	0x2c7
 752 019c 6B000000 		.4byte	0x6b
 753 01a0 00000000 		.4byte	.LFB11
 754 01a4 0C000000 		.4byte	.LFE11-.LFB11
 755 01a8 01       		.uleb128 0x1
 756 01a9 9C       		.byte	0x9c
 757 01aa 0B       		.uleb128 0xb
 758 01ab D5020000 		.4byte	.LASF43
 759 01af 01       		.byte	0x1
 760 01b0 E102     		.2byte	0x2e1
 761 01b2 6B000000 		.4byte	0x6b
 762 01b6 00000000 		.4byte	.LFB12
 763 01ba 0C000000 		.4byte	.LFE12-.LFB12
 764 01be 01       		.uleb128 0x1
 765 01bf 9C       		.byte	0x9c
 766 01c0 D3010000 		.4byte	0x1d3
 767 01c4 0C       		.uleb128 0xc
 768 01c5 86020000 		.4byte	.LASF33
 769 01c9 01       		.byte	0x1
 770 01ca E302     		.2byte	0x2e3
 771 01cc 6B000000 		.4byte	0x6b
 772 01d0 01       		.uleb128 0x1
 773 01d1 50       		.byte	0x50
 774 01d2 00       		.byte	0
 775 01d3 08       		.uleb128 0x8
 776 01d4 98010000 		.4byte	.LASF28
 777 01d8 01       		.byte	0x1
 778 01d9 FD02     		.2byte	0x2fd
 779 01db 00000000 		.4byte	.LFB13
 780 01df 0C000000 		.4byte	.LFE13-.LFB13
 781 01e3 01       		.uleb128 0x1
 782 01e4 9C       		.byte	0x9c
 783 01e5 F8010000 		.4byte	0x1f8
 784 01e9 09       		.uleb128 0x9
 785 01ea 1A010000 		.4byte	.LASF29
 786 01ee 01       		.byte	0x1
 787 01ef FD02     		.2byte	0x2fd
 788 01f1 6B000000 		.4byte	0x6b
 789 01f5 01       		.uleb128 0x1
 790 01f6 50       		.byte	0x50
 791 01f7 00       		.byte	0
 792 01f8 0A       		.uleb128 0xa
 793 01f9 86010000 		.4byte	.LASF30
 794 01fd 01       		.byte	0x1
 795 01fe 1603     		.2byte	0x316
 796 0200 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 31


 797 0204 00000000 		.4byte	.LFB14
 798 0208 0C000000 		.4byte	.LFE14-.LFB14
 799 020c 01       		.uleb128 0x1
 800 020d 9C       		.byte	0x9c
 801 020e 08       		.uleb128 0x8
 802 020f 20000000 		.4byte	.LASF31
 803 0213 01       		.byte	0x1
 804 0214 C501     		.2byte	0x1c5
 805 0216 00000000 		.4byte	.LFB6
 806 021a 14000000 		.4byte	.LFE6-.LFB6
 807 021e 01       		.uleb128 0x1
 808 021f 9C       		.byte	0x9c
 809 0220 37020000 		.4byte	0x237
 810 0224 0D       		.uleb128 0xd
 811 0225 08000000 		.4byte	.LVL7
 812 0229 F8010000 		.4byte	0x1f8
 813 022d 0D       		.uleb128 0xd
 814 022e 0C000000 		.4byte	.LVL8
 815 0232 94010000 		.4byte	0x194
 816 0236 00       		.byte	0
 817 0237 0E       		.uleb128 0xe
 818 0238 B3010000 		.4byte	.LASF32
 819 023c 01       		.byte	0x1
 820 023d 54       		.byte	0x54
 821 023e 00000000 		.4byte	.LFB1
 822 0242 58000000 		.4byte	.LFE1-.LFB1
 823 0246 01       		.uleb128 0x1
 824 0247 9C       		.byte	0x9c
 825 0248 E9020000 		.4byte	0x2e9
 826 024c 0F       		.uleb128 0xf
 827 024d B9020000 		.4byte	.LASF34
 828 0251 01       		.byte	0x1
 829 0252 57       		.byte	0x57
 830 0253 6B000000 		.4byte	0x6b
 831 0257 00000000 		.4byte	.LLST0
 832 025b 0F       		.uleb128 0xf
 833 025c 59010000 		.4byte	.LASF35
 834 0260 01       		.byte	0x1
 835 0261 5D       		.byte	0x5d
 836 0262 6B000000 		.4byte	0x6b
 837 0266 13000000 		.4byte	.LLST1
 838 026a 10       		.uleb128 0x10
 839 026b 20000000 		.4byte	.LVL11
 840 026f C5000000 		.4byte	0xc5
 841 0273 7E020000 		.4byte	0x27e
 842 0277 11       		.uleb128 0x11
 843 0278 01       		.uleb128 0x1
 844 0279 50       		.byte	0x50
 845 027a 02       		.uleb128 0x2
 846 027b 09       		.byte	0x9
 847 027c FF       		.byte	0xff
 848 027d 00       		.byte	0
 849 027e 10       		.uleb128 0x10
 850 027f 26000000 		.4byte	.LVL12
 851 0283 00010000 		.4byte	0x100
 852 0287 92020000 		.4byte	0x292
 853 028b 11       		.uleb128 0x11
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 32


 854 028c 01       		.uleb128 0x1
 855 028d 50       		.byte	0x50
 856 028e 02       		.uleb128 0x2
 857 028f 09       		.byte	0x9
 858 0290 FF       		.byte	0xff
 859 0291 00       		.byte	0
 860 0292 10       		.uleb128 0x10
 861 0293 2C000000 		.4byte	.LVL13
 862 0297 25010000 		.4byte	0x125
 863 029b A6020000 		.4byte	0x2a6
 864 029f 11       		.uleb128 0x11
 865 02a0 01       		.uleb128 0x1
 866 02a1 50       		.byte	0x50
 867 02a2 02       		.uleb128 0x2
 868 02a3 08       		.byte	0x8
 869 02a4 7F       		.byte	0x7f
 870 02a5 00       		.byte	0
 871 02a6 10       		.uleb128 0x10
 872 02a7 32000000 		.4byte	.LVL14
 873 02ab 4A010000 		.4byte	0x14a
 874 02af BA020000 		.4byte	0x2ba
 875 02b3 11       		.uleb128 0x11
 876 02b4 01       		.uleb128 0x1
 877 02b5 50       		.byte	0x50
 878 02b6 02       		.uleb128 0x2
 879 02b7 08       		.byte	0x8
 880 02b8 3F       		.byte	0x3f
 881 02b9 00       		.byte	0
 882 02ba 10       		.uleb128 0x10
 883 02bb 38000000 		.4byte	.LVL15
 884 02bf 6F010000 		.4byte	0x16f
 885 02c3 CD020000 		.4byte	0x2cd
 886 02c7 11       		.uleb128 0x11
 887 02c8 01       		.uleb128 0x1
 888 02c9 50       		.byte	0x50
 889 02ca 01       		.uleb128 0x1
 890 02cb 30       		.byte	0x30
 891 02cc 00       		.byte	0
 892 02cd 0D       		.uleb128 0xd
 893 02ce 3C000000 		.4byte	.LVL16
 894 02d2 64030000 		.4byte	0x364
 895 02d6 0D       		.uleb128 0xd
 896 02d7 48000000 		.4byte	.LVL17
 897 02db 6F030000 		.4byte	0x36f
 898 02df 0D       		.uleb128 0xd
 899 02e0 4C000000 		.4byte	.LVL18
 900 02e4 0E020000 		.4byte	0x20e
 901 02e8 00       		.byte	0
 902 02e9 0E       		.uleb128 0xe
 903 02ea 4E030000 		.4byte	.LASF36
 904 02ee 01       		.byte	0x1
 905 02ef 37       		.byte	0x37
 906 02f0 00000000 		.4byte	.LFB0
 907 02f4 1C000000 		.4byte	.LFE0-.LFB0
 908 02f8 01       		.uleb128 0x1
 909 02f9 9C       		.byte	0x9c
 910 02fa 11030000 		.4byte	0x311
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 33


 911 02fe 0D       		.uleb128 0xd
 912 02ff 0C000000 		.4byte	.LVL19
 913 0303 37020000 		.4byte	0x237
 914 0307 0D       		.uleb128 0xd
 915 0308 16000000 		.4byte	.LVL20
 916 030c A3000000 		.4byte	0xa3
 917 0310 00       		.byte	0
 918 0311 0A       		.uleb128 0xa
 919 0312 37000000 		.4byte	.LASF37
 920 0316 01       		.byte	0x1
 921 0317 4A03     		.2byte	0x34a
 922 0319 6B000000 		.4byte	0x6b
 923 031d 00000000 		.4byte	.LFB15
 924 0321 0C000000 		.4byte	.LFE15-.LFB15
 925 0325 01       		.uleb128 0x1
 926 0326 9C       		.byte	0x9c
 927 0327 0A       		.uleb128 0xa
 928 0328 4A000000 		.4byte	.LASF38
 929 032c 01       		.byte	0x1
 930 032d 5E03     		.2byte	0x35e
 931 032f 6B000000 		.4byte	0x6b
 932 0333 00000000 		.4byte	.LFB16
 933 0337 0C000000 		.4byte	.LFE16-.LFB16
 934 033b 01       		.uleb128 0x1
 935 033c 9C       		.byte	0x9c
 936 033d 0A       		.uleb128 0xa
 937 033e F1000000 		.4byte	.LASF39
 938 0342 01       		.byte	0x1
 939 0343 7403     		.2byte	0x374
 940 0345 6B000000 		.4byte	0x6b
 941 0349 00000000 		.4byte	.LFB17
 942 034d 0C000000 		.4byte	.LFE17-.LFB17
 943 0351 01       		.uleb128 0x1
 944 0352 9C       		.byte	0x9c
 945 0353 12       		.uleb128 0x12
 946 0354 6E010000 		.4byte	.LASF44
 947 0358 01       		.byte	0x1
 948 0359 20       		.byte	0x20
 949 035a 6B000000 		.4byte	0x6b
 950 035e 05       		.uleb128 0x5
 951 035f 03       		.byte	0x3
 952 0360 00000000 		.4byte	PWM_1_initVar
 953 0364 13       		.uleb128 0x13
 954 0365 4C020000 		.4byte	.LASF45
 955 0369 03       		.byte	0x3
 956 036a 7E       		.byte	0x7e
 957 036b 6B000000 		.4byte	0x6b
 958 036f 14       		.uleb128 0x14
 959 0370 70020000 		.4byte	.LASF46
 960 0374 03       		.byte	0x3
 961 0375 7F       		.byte	0x7f
 962 0376 15       		.uleb128 0x15
 963 0377 6B000000 		.4byte	0x6b
 964 037b 00       		.byte	0
 965 037c 00       		.byte	0
 966              		.section	.debug_abbrev,"",%progbits
 967              	.Ldebug_abbrev0:
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 34


 968 0000 01       		.uleb128 0x1
 969 0001 11       		.uleb128 0x11
 970 0002 01       		.byte	0x1
 971 0003 25       		.uleb128 0x25
 972 0004 0E       		.uleb128 0xe
 973 0005 13       		.uleb128 0x13
 974 0006 0B       		.uleb128 0xb
 975 0007 03       		.uleb128 0x3
 976 0008 0E       		.uleb128 0xe
 977 0009 1B       		.uleb128 0x1b
 978 000a 0E       		.uleb128 0xe
 979 000b 55       		.uleb128 0x55
 980 000c 17       		.uleb128 0x17
 981 000d 11       		.uleb128 0x11
 982 000e 01       		.uleb128 0x1
 983 000f 10       		.uleb128 0x10
 984 0010 17       		.uleb128 0x17
 985 0011 00       		.byte	0
 986 0012 00       		.byte	0
 987 0013 02       		.uleb128 0x2
 988 0014 24       		.uleb128 0x24
 989 0015 00       		.byte	0
 990 0016 0B       		.uleb128 0xb
 991 0017 0B       		.uleb128 0xb
 992 0018 3E       		.uleb128 0x3e
 993 0019 0B       		.uleb128 0xb
 994 001a 03       		.uleb128 0x3
 995 001b 0E       		.uleb128 0xe
 996 001c 00       		.byte	0
 997 001d 00       		.byte	0
 998 001e 03       		.uleb128 0x3
 999 001f 24       		.uleb128 0x24
 1000 0020 00       		.byte	0
 1001 0021 0B       		.uleb128 0xb
 1002 0022 0B       		.uleb128 0xb
 1003 0023 3E       		.uleb128 0x3e
 1004 0024 0B       		.uleb128 0xb
 1005 0025 03       		.uleb128 0x3
 1006 0026 08       		.uleb128 0x8
 1007 0027 00       		.byte	0
 1008 0028 00       		.byte	0
 1009 0029 04       		.uleb128 0x4
 1010 002a 16       		.uleb128 0x16
 1011 002b 00       		.byte	0
 1012 002c 03       		.uleb128 0x3
 1013 002d 0E       		.uleb128 0xe
 1014 002e 3A       		.uleb128 0x3a
 1015 002f 0B       		.uleb128 0xb
 1016 0030 3B       		.uleb128 0x3b
 1017 0031 0B       		.uleb128 0xb
 1018 0032 49       		.uleb128 0x49
 1019 0033 13       		.uleb128 0x13
 1020 0034 00       		.byte	0
 1021 0035 00       		.byte	0
 1022 0036 05       		.uleb128 0x5
 1023 0037 16       		.uleb128 0x16
 1024 0038 00       		.byte	0
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 35


 1025 0039 03       		.uleb128 0x3
 1026 003a 0E       		.uleb128 0xe
 1027 003b 3A       		.uleb128 0x3a
 1028 003c 0B       		.uleb128 0xb
 1029 003d 3B       		.uleb128 0x3b
 1030 003e 05       		.uleb128 0x5
 1031 003f 49       		.uleb128 0x49
 1032 0040 13       		.uleb128 0x13
 1033 0041 00       		.byte	0
 1034 0042 00       		.byte	0
 1035 0043 06       		.uleb128 0x6
 1036 0044 35       		.uleb128 0x35
 1037 0045 00       		.byte	0
 1038 0046 49       		.uleb128 0x49
 1039 0047 13       		.uleb128 0x13
 1040 0048 00       		.byte	0
 1041 0049 00       		.byte	0
 1042 004a 07       		.uleb128 0x7
 1043 004b 2E       		.uleb128 0x2e
 1044 004c 00       		.byte	0
 1045 004d 3F       		.uleb128 0x3f
 1046 004e 19       		.uleb128 0x19
 1047 004f 03       		.uleb128 0x3
 1048 0050 0E       		.uleb128 0xe
 1049 0051 3A       		.uleb128 0x3a
 1050 0052 0B       		.uleb128 0xb
 1051 0053 3B       		.uleb128 0x3b
 1052 0054 0B       		.uleb128 0xb
 1053 0055 27       		.uleb128 0x27
 1054 0056 19       		.uleb128 0x19
 1055 0057 11       		.uleb128 0x11
 1056 0058 01       		.uleb128 0x1
 1057 0059 12       		.uleb128 0x12
 1058 005a 06       		.uleb128 0x6
 1059 005b 40       		.uleb128 0x40
 1060 005c 18       		.uleb128 0x18
 1061 005d 9742     		.uleb128 0x2117
 1062 005f 19       		.uleb128 0x19
 1063 0060 00       		.byte	0
 1064 0061 00       		.byte	0
 1065 0062 08       		.uleb128 0x8
 1066 0063 2E       		.uleb128 0x2e
 1067 0064 01       		.byte	0x1
 1068 0065 3F       		.uleb128 0x3f
 1069 0066 19       		.uleb128 0x19
 1070 0067 03       		.uleb128 0x3
 1071 0068 0E       		.uleb128 0xe
 1072 0069 3A       		.uleb128 0x3a
 1073 006a 0B       		.uleb128 0xb
 1074 006b 3B       		.uleb128 0x3b
 1075 006c 05       		.uleb128 0x5
 1076 006d 27       		.uleb128 0x27
 1077 006e 19       		.uleb128 0x19
 1078 006f 11       		.uleb128 0x11
 1079 0070 01       		.uleb128 0x1
 1080 0071 12       		.uleb128 0x12
 1081 0072 06       		.uleb128 0x6
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 36


 1082 0073 40       		.uleb128 0x40
 1083 0074 18       		.uleb128 0x18
 1084 0075 9742     		.uleb128 0x2117
 1085 0077 19       		.uleb128 0x19
 1086 0078 01       		.uleb128 0x1
 1087 0079 13       		.uleb128 0x13
 1088 007a 00       		.byte	0
 1089 007b 00       		.byte	0
 1090 007c 09       		.uleb128 0x9
 1091 007d 05       		.uleb128 0x5
 1092 007e 00       		.byte	0
 1093 007f 03       		.uleb128 0x3
 1094 0080 0E       		.uleb128 0xe
 1095 0081 3A       		.uleb128 0x3a
 1096 0082 0B       		.uleb128 0xb
 1097 0083 3B       		.uleb128 0x3b
 1098 0084 05       		.uleb128 0x5
 1099 0085 49       		.uleb128 0x49
 1100 0086 13       		.uleb128 0x13
 1101 0087 02       		.uleb128 0x2
 1102 0088 18       		.uleb128 0x18
 1103 0089 00       		.byte	0
 1104 008a 00       		.byte	0
 1105 008b 0A       		.uleb128 0xa
 1106 008c 2E       		.uleb128 0x2e
 1107 008d 00       		.byte	0
 1108 008e 3F       		.uleb128 0x3f
 1109 008f 19       		.uleb128 0x19
 1110 0090 03       		.uleb128 0x3
 1111 0091 0E       		.uleb128 0xe
 1112 0092 3A       		.uleb128 0x3a
 1113 0093 0B       		.uleb128 0xb
 1114 0094 3B       		.uleb128 0x3b
 1115 0095 05       		.uleb128 0x5
 1116 0096 27       		.uleb128 0x27
 1117 0097 19       		.uleb128 0x19
 1118 0098 49       		.uleb128 0x49
 1119 0099 13       		.uleb128 0x13
 1120 009a 11       		.uleb128 0x11
 1121 009b 01       		.uleb128 0x1
 1122 009c 12       		.uleb128 0x12
 1123 009d 06       		.uleb128 0x6
 1124 009e 40       		.uleb128 0x40
 1125 009f 18       		.uleb128 0x18
 1126 00a0 9742     		.uleb128 0x2117
 1127 00a2 19       		.uleb128 0x19
 1128 00a3 00       		.byte	0
 1129 00a4 00       		.byte	0
 1130 00a5 0B       		.uleb128 0xb
 1131 00a6 2E       		.uleb128 0x2e
 1132 00a7 01       		.byte	0x1
 1133 00a8 3F       		.uleb128 0x3f
 1134 00a9 19       		.uleb128 0x19
 1135 00aa 03       		.uleb128 0x3
 1136 00ab 0E       		.uleb128 0xe
 1137 00ac 3A       		.uleb128 0x3a
 1138 00ad 0B       		.uleb128 0xb
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 37


 1139 00ae 3B       		.uleb128 0x3b
 1140 00af 05       		.uleb128 0x5
 1141 00b0 27       		.uleb128 0x27
 1142 00b1 19       		.uleb128 0x19
 1143 00b2 49       		.uleb128 0x49
 1144 00b3 13       		.uleb128 0x13
 1145 00b4 11       		.uleb128 0x11
 1146 00b5 01       		.uleb128 0x1
 1147 00b6 12       		.uleb128 0x12
 1148 00b7 06       		.uleb128 0x6
 1149 00b8 40       		.uleb128 0x40
 1150 00b9 18       		.uleb128 0x18
 1151 00ba 9742     		.uleb128 0x2117
 1152 00bc 19       		.uleb128 0x19
 1153 00bd 01       		.uleb128 0x1
 1154 00be 13       		.uleb128 0x13
 1155 00bf 00       		.byte	0
 1156 00c0 00       		.byte	0
 1157 00c1 0C       		.uleb128 0xc
 1158 00c2 34       		.uleb128 0x34
 1159 00c3 00       		.byte	0
 1160 00c4 03       		.uleb128 0x3
 1161 00c5 0E       		.uleb128 0xe
 1162 00c6 3A       		.uleb128 0x3a
 1163 00c7 0B       		.uleb128 0xb
 1164 00c8 3B       		.uleb128 0x3b
 1165 00c9 05       		.uleb128 0x5
 1166 00ca 49       		.uleb128 0x49
 1167 00cb 13       		.uleb128 0x13
 1168 00cc 02       		.uleb128 0x2
 1169 00cd 18       		.uleb128 0x18
 1170 00ce 00       		.byte	0
 1171 00cf 00       		.byte	0
 1172 00d0 0D       		.uleb128 0xd
 1173 00d1 898201   		.uleb128 0x4109
 1174 00d4 00       		.byte	0
 1175 00d5 11       		.uleb128 0x11
 1176 00d6 01       		.uleb128 0x1
 1177 00d7 31       		.uleb128 0x31
 1178 00d8 13       		.uleb128 0x13
 1179 00d9 00       		.byte	0
 1180 00da 00       		.byte	0
 1181 00db 0E       		.uleb128 0xe
 1182 00dc 2E       		.uleb128 0x2e
 1183 00dd 01       		.byte	0x1
 1184 00de 3F       		.uleb128 0x3f
 1185 00df 19       		.uleb128 0x19
 1186 00e0 03       		.uleb128 0x3
 1187 00e1 0E       		.uleb128 0xe
 1188 00e2 3A       		.uleb128 0x3a
 1189 00e3 0B       		.uleb128 0xb
 1190 00e4 3B       		.uleb128 0x3b
 1191 00e5 0B       		.uleb128 0xb
 1192 00e6 27       		.uleb128 0x27
 1193 00e7 19       		.uleb128 0x19
 1194 00e8 11       		.uleb128 0x11
 1195 00e9 01       		.uleb128 0x1
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 38


 1196 00ea 12       		.uleb128 0x12
 1197 00eb 06       		.uleb128 0x6
 1198 00ec 40       		.uleb128 0x40
 1199 00ed 18       		.uleb128 0x18
 1200 00ee 9742     		.uleb128 0x2117
 1201 00f0 19       		.uleb128 0x19
 1202 00f1 01       		.uleb128 0x1
 1203 00f2 13       		.uleb128 0x13
 1204 00f3 00       		.byte	0
 1205 00f4 00       		.byte	0
 1206 00f5 0F       		.uleb128 0xf
 1207 00f6 34       		.uleb128 0x34
 1208 00f7 00       		.byte	0
 1209 00f8 03       		.uleb128 0x3
 1210 00f9 0E       		.uleb128 0xe
 1211 00fa 3A       		.uleb128 0x3a
 1212 00fb 0B       		.uleb128 0xb
 1213 00fc 3B       		.uleb128 0x3b
 1214 00fd 0B       		.uleb128 0xb
 1215 00fe 49       		.uleb128 0x49
 1216 00ff 13       		.uleb128 0x13
 1217 0100 02       		.uleb128 0x2
 1218 0101 17       		.uleb128 0x17
 1219 0102 00       		.byte	0
 1220 0103 00       		.byte	0
 1221 0104 10       		.uleb128 0x10
 1222 0105 898201   		.uleb128 0x4109
 1223 0108 01       		.byte	0x1
 1224 0109 11       		.uleb128 0x11
 1225 010a 01       		.uleb128 0x1
 1226 010b 31       		.uleb128 0x31
 1227 010c 13       		.uleb128 0x13
 1228 010d 01       		.uleb128 0x1
 1229 010e 13       		.uleb128 0x13
 1230 010f 00       		.byte	0
 1231 0110 00       		.byte	0
 1232 0111 11       		.uleb128 0x11
 1233 0112 8A8201   		.uleb128 0x410a
 1234 0115 00       		.byte	0
 1235 0116 02       		.uleb128 0x2
 1236 0117 18       		.uleb128 0x18
 1237 0118 9142     		.uleb128 0x2111
 1238 011a 18       		.uleb128 0x18
 1239 011b 00       		.byte	0
 1240 011c 00       		.byte	0
 1241 011d 12       		.uleb128 0x12
 1242 011e 34       		.uleb128 0x34
 1243 011f 00       		.byte	0
 1244 0120 03       		.uleb128 0x3
 1245 0121 0E       		.uleb128 0xe
 1246 0122 3A       		.uleb128 0x3a
 1247 0123 0B       		.uleb128 0xb
 1248 0124 3B       		.uleb128 0x3b
 1249 0125 0B       		.uleb128 0xb
 1250 0126 49       		.uleb128 0x49
 1251 0127 13       		.uleb128 0x13
 1252 0128 3F       		.uleb128 0x3f
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 39


 1253 0129 19       		.uleb128 0x19
 1254 012a 02       		.uleb128 0x2
 1255 012b 18       		.uleb128 0x18
 1256 012c 00       		.byte	0
 1257 012d 00       		.byte	0
 1258 012e 13       		.uleb128 0x13
 1259 012f 2E       		.uleb128 0x2e
 1260 0130 00       		.byte	0
 1261 0131 3F       		.uleb128 0x3f
 1262 0132 19       		.uleb128 0x19
 1263 0133 03       		.uleb128 0x3
 1264 0134 0E       		.uleb128 0xe
 1265 0135 3A       		.uleb128 0x3a
 1266 0136 0B       		.uleb128 0xb
 1267 0137 3B       		.uleb128 0x3b
 1268 0138 0B       		.uleb128 0xb
 1269 0139 27       		.uleb128 0x27
 1270 013a 19       		.uleb128 0x19
 1271 013b 49       		.uleb128 0x49
 1272 013c 13       		.uleb128 0x13
 1273 013d 3C       		.uleb128 0x3c
 1274 013e 19       		.uleb128 0x19
 1275 013f 00       		.byte	0
 1276 0140 00       		.byte	0
 1277 0141 14       		.uleb128 0x14
 1278 0142 2E       		.uleb128 0x2e
 1279 0143 01       		.byte	0x1
 1280 0144 3F       		.uleb128 0x3f
 1281 0145 19       		.uleb128 0x19
 1282 0146 03       		.uleb128 0x3
 1283 0147 0E       		.uleb128 0xe
 1284 0148 3A       		.uleb128 0x3a
 1285 0149 0B       		.uleb128 0xb
 1286 014a 3B       		.uleb128 0x3b
 1287 014b 0B       		.uleb128 0xb
 1288 014c 27       		.uleb128 0x27
 1289 014d 19       		.uleb128 0x19
 1290 014e 3C       		.uleb128 0x3c
 1291 014f 19       		.uleb128 0x19
 1292 0150 00       		.byte	0
 1293 0151 00       		.byte	0
 1294 0152 15       		.uleb128 0x15
 1295 0153 05       		.uleb128 0x5
 1296 0154 00       		.byte	0
 1297 0155 49       		.uleb128 0x49
 1298 0156 13       		.uleb128 0x13
 1299 0157 00       		.byte	0
 1300 0158 00       		.byte	0
 1301 0159 00       		.byte	0
 1302              		.section	.debug_loc,"",%progbits
 1303              	.Ldebug_loc0:
 1304              	.LLST0:
 1305 0000 0A000000 		.4byte	.LVL9
 1306 0004 0E000000 		.4byte	.LVL10
 1307 0008 0100     		.2byte	0x1
 1308 000a 53       		.byte	0x53
 1309 000b 00000000 		.4byte	0
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 40


 1310 000f 00000000 		.4byte	0
 1311              	.LLST1:
 1312 0013 3C000000 		.4byte	.LVL16
 1313 0017 47000000 		.4byte	.LVL17-1
 1314 001b 0100     		.2byte	0x1
 1315 001d 50       		.byte	0x50
 1316 001e 00000000 		.4byte	0
 1317 0022 00000000 		.4byte	0
 1318              		.section	.debug_aranges,"",%progbits
 1319 0000 A4000000 		.4byte	0xa4
 1320 0004 0200     		.2byte	0x2
 1321 0006 00000000 		.4byte	.Ldebug_info0
 1322 000a 04       		.byte	0x4
 1323 000b 00       		.byte	0
 1324 000c 0000     		.2byte	0
 1325 000e 0000     		.2byte	0
 1326 0010 00000000 		.4byte	.LFB2
 1327 0014 10000000 		.4byte	.LFE2-.LFB2
 1328 0018 00000000 		.4byte	.LFB3
 1329 001c 10000000 		.4byte	.LFE3-.LFB3
 1330 0020 00000000 		.4byte	.LFB4
 1331 0024 0C000000 		.4byte	.LFE4-.LFB4
 1332 0028 00000000 		.4byte	.LFB5
 1333 002c 14000000 		.4byte	.LFE5-.LFB5
 1334 0030 00000000 		.4byte	.LFB7
 1335 0034 0C000000 		.4byte	.LFE7-.LFB7
 1336 0038 00000000 		.4byte	.LFB8
 1337 003c 0C000000 		.4byte	.LFE8-.LFB8
 1338 0040 00000000 		.4byte	.LFB9
 1339 0044 0C000000 		.4byte	.LFE9-.LFB9
 1340 0048 00000000 		.4byte	.LFB10
 1341 004c 0C000000 		.4byte	.LFE10-.LFB10
 1342 0050 00000000 		.4byte	.LFB11
 1343 0054 0C000000 		.4byte	.LFE11-.LFB11
 1344 0058 00000000 		.4byte	.LFB12
 1345 005c 0C000000 		.4byte	.LFE12-.LFB12
 1346 0060 00000000 		.4byte	.LFB13
 1347 0064 0C000000 		.4byte	.LFE13-.LFB13
 1348 0068 00000000 		.4byte	.LFB14
 1349 006c 0C000000 		.4byte	.LFE14-.LFB14
 1350 0070 00000000 		.4byte	.LFB6
 1351 0074 14000000 		.4byte	.LFE6-.LFB6
 1352 0078 00000000 		.4byte	.LFB1
 1353 007c 58000000 		.4byte	.LFE1-.LFB1
 1354 0080 00000000 		.4byte	.LFB0
 1355 0084 1C000000 		.4byte	.LFE0-.LFB0
 1356 0088 00000000 		.4byte	.LFB15
 1357 008c 0C000000 		.4byte	.LFE15-.LFB15
 1358 0090 00000000 		.4byte	.LFB16
 1359 0094 0C000000 		.4byte	.LFE16-.LFB16
 1360 0098 00000000 		.4byte	.LFB17
 1361 009c 0C000000 		.4byte	.LFE17-.LFB17
 1362 00a0 00000000 		.4byte	0
 1363 00a4 00000000 		.4byte	0
 1364              		.section	.debug_ranges,"",%progbits
 1365              	.Ldebug_ranges0:
 1366 0000 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 41


 1367 0004 10000000 		.4byte	.LFE2
 1368 0008 00000000 		.4byte	.LFB3
 1369 000c 10000000 		.4byte	.LFE3
 1370 0010 00000000 		.4byte	.LFB4
 1371 0014 0C000000 		.4byte	.LFE4
 1372 0018 00000000 		.4byte	.LFB5
 1373 001c 14000000 		.4byte	.LFE5
 1374 0020 00000000 		.4byte	.LFB7
 1375 0024 0C000000 		.4byte	.LFE7
 1376 0028 00000000 		.4byte	.LFB8
 1377 002c 0C000000 		.4byte	.LFE8
 1378 0030 00000000 		.4byte	.LFB9
 1379 0034 0C000000 		.4byte	.LFE9
 1380 0038 00000000 		.4byte	.LFB10
 1381 003c 0C000000 		.4byte	.LFE10
 1382 0040 00000000 		.4byte	.LFB11
 1383 0044 0C000000 		.4byte	.LFE11
 1384 0048 00000000 		.4byte	.LFB12
 1385 004c 0C000000 		.4byte	.LFE12
 1386 0050 00000000 		.4byte	.LFB13
 1387 0054 0C000000 		.4byte	.LFE13
 1388 0058 00000000 		.4byte	.LFB14
 1389 005c 0C000000 		.4byte	.LFE14
 1390 0060 00000000 		.4byte	.LFB6
 1391 0064 14000000 		.4byte	.LFE6
 1392 0068 00000000 		.4byte	.LFB1
 1393 006c 58000000 		.4byte	.LFE1
 1394 0070 00000000 		.4byte	.LFB0
 1395 0074 1C000000 		.4byte	.LFE0
 1396 0078 00000000 		.4byte	.LFB15
 1397 007c 0C000000 		.4byte	.LFE15
 1398 0080 00000000 		.4byte	.LFB16
 1399 0084 0C000000 		.4byte	.LFE16
 1400 0088 00000000 		.4byte	.LFB17
 1401 008c 0C000000 		.4byte	.LFE17
 1402 0090 00000000 		.4byte	0
 1403 0094 00000000 		.4byte	0
 1404              		.section	.debug_line,"",%progbits
 1405              	.Ldebug_line0:
 1406 0000 A7010000 		.section	.debug_str,"MS",%progbits,1
 1406      02004F00 
 1406      00000201 
 1406      FB0E0D00 
 1406      01010101 
 1407              	.LASF15:
 1408 0000 50574D5F 		.ascii	"PWM_1_Enable\000"
 1408      315F456E 
 1408      61626C65 
 1408      00
 1409              	.LASF17:
 1410 000d 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1410      315F5772 
 1410      69746543 
 1410      6F756E74 
 1410      657200
 1411              	.LASF31:
 1412 0020 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 42


 1412      315F436C 
 1412      65617246 
 1412      49464F00 
 1413              	.LASF20:
 1414 0030 70657269 		.ascii	"period\000"
 1414      6F6400
 1415              	.LASF37:
 1416 0037 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1416      315F5265 
 1416      6164436F 
 1416      6D706172 
 1416      653100
 1417              	.LASF38:
 1418 004a 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1418      315F5265 
 1418      6164436F 
 1418      6D706172 
 1418      653200
 1419              	.LASF3:
 1420 005d 73686F72 		.ascii	"short unsigned int\000"
 1420      7420756E 
 1420      7369676E 
 1420      65642069 
 1420      6E7400
 1421              	.LASF41:
 1422 0070 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1422      6E657261 
 1422      7465645F 
 1422      536F7572 
 1422      63655C50 
 1423              	.LASF21:
 1424 0091 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1424      315F5772 
 1424      69746543 
 1424      6F6D7061 
 1424      72653100 
 1425              	.LASF23:
 1426 00a5 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1426      315F5772 
 1426      69746543 
 1426      6F6D7061 
 1426      72653200 
 1427              	.LASF9:
 1428 00b9 666C6F61 		.ascii	"float\000"
 1428      7400
 1429              	.LASF19:
 1430 00bf 636F756E 		.ascii	"counter\000"
 1430      74657200 
 1431              	.LASF7:
 1432 00c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1432      206C6F6E 
 1432      6720756E 
 1432      7369676E 
 1432      65642069 
 1433              	.LASF1:
 1434 00de 756E7369 		.ascii	"unsigned char\000"
 1434      676E6564 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 43


 1434      20636861 
 1434      7200
 1435              	.LASF13:
 1436 00ec 72656738 		.ascii	"reg8\000"
 1436      00
 1437              	.LASF39:
 1438 00f1 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1438      315F5265 
 1438      61645065 
 1438      72696F64 
 1438      00
 1439              	.LASF5:
 1440 0102 6C6F6E67 		.ascii	"long unsigned int\000"
 1440      20756E73 
 1440      69676E65 
 1440      6420696E 
 1440      7400
 1441              	.LASF12:
 1442 0114 75696E74 		.ascii	"uint8\000"
 1442      3800
 1443              	.LASF29:
 1444 011a 636F6E74 		.ascii	"control\000"
 1444      726F6C00 
 1445              	.LASF24:
 1446 0122 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1446      315F5365 
 1446      74496E74 
 1446      65727275 
 1446      70744D6F 
 1447              	.LASF27:
 1448 0139 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1448      315F5265 
 1448      61645374 
 1448      61747573 
 1448      52656769 
 1449              	.LASF10:
 1450 0152 646F7562 		.ascii	"double\000"
 1450      6C6500
 1451              	.LASF35:
 1452 0159 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1452      315F696E 
 1452      74657272 
 1452      75707453 
 1452      74617465 
 1453              	.LASF44:
 1454 016e 50574D5F 		.ascii	"PWM_1_initVar\000"
 1454      315F696E 
 1454      69745661 
 1454      7200
 1455              	.LASF2:
 1456 017c 73686F72 		.ascii	"short int\000"
 1456      7420696E 
 1456      7400
 1457              	.LASF30:
 1458 0186 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1458      315F5265 
 1458      61644361 
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 44


 1458      70747572 
 1458      6500
 1459              	.LASF28:
 1460 0198 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1460      315F5772 
 1460      69746543 
 1460      6F6E7472 
 1460      6F6C5265 
 1461              	.LASF32:
 1462 01b3 50574D5F 		.ascii	"PWM_1_Init\000"
 1462      315F496E 
 1462      697400
 1463              	.LASF40:
 1464 01be 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1464      4320342E 
 1464      392E3320 
 1464      32303135 
 1464      30333033 
 1465 01f1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1465      20726576 
 1465      6973696F 
 1465      6E203232 
 1465      31323230 
 1466 0224 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1466      66756E63 
 1466      74696F6E 
 1466      2D736563 
 1466      74696F6E 
 1467              	.LASF45:
 1468 024c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1468      74657243 
 1468      72697469 
 1468      63616C53 
 1468      65637469 
 1469              	.LASF8:
 1470 0263 756E7369 		.ascii	"unsigned int\000"
 1470      676E6564 
 1470      20696E74 
 1470      00
 1471              	.LASF46:
 1472 0270 43794578 		.ascii	"CyExitCriticalSection\000"
 1472      69744372 
 1472      69746963 
 1472      616C5365 
 1472      6374696F 
 1473              	.LASF33:
 1474 0286 72657375 		.ascii	"result\000"
 1474      6C7400
 1475              	.LASF42:
 1476 028d 433A5C55 		.ascii	"C:\\Users\\li\\Desktop\\pxc\\robot-car\\car.cydsn\000"
 1476      73657273 
 1476      5C6C695C 
 1476      4465736B 
 1476      746F705C 
 1477              	.LASF34:
 1478 02b9 6374726C 		.ascii	"ctrl\000"
 1478      00
ARM GAS  C:\Users\li\AppData\Local\Temp\cc5vrlBU.s 			page 45


 1479              	.LASF14:
 1480 02be 73697A65 		.ascii	"sizetype\000"
 1480      74797065 
 1480      00
 1481              	.LASF6:
 1482 02c7 6C6F6E67 		.ascii	"long long int\000"
 1482      206C6F6E 
 1482      6720696E 
 1482      7400
 1483              	.LASF43:
 1484 02d5 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1484      315F5265 
 1484      6164436F 
 1484      6E74726F 
 1484      6C526567 
 1485              	.LASF25:
 1486 02ef 696E7465 		.ascii	"interruptMode\000"
 1486      72727570 
 1486      744D6F64 
 1486      6500
 1487              	.LASF18:
 1488 02fd 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1488      315F5772 
 1488      69746550 
 1488      6572696F 
 1488      6400
 1489              	.LASF26:
 1490 030f 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1490      315F5265 
 1490      6164436F 
 1490      756E7465 
 1490      7200
 1491              	.LASF16:
 1492 0321 50574D5F 		.ascii	"PWM_1_Stop\000"
 1492      315F5374 
 1492      6F7000
 1493              	.LASF4:
 1494 032c 6C6F6E67 		.ascii	"long int\000"
 1494      20696E74 
 1494      00
 1495              	.LASF11:
 1496 0335 63686172 		.ascii	"char\000"
 1496      00
 1497              	.LASF0:
 1498 033a 7369676E 		.ascii	"signed char\000"
 1498      65642063 
 1498      68617200 
 1499              	.LASF22:
 1500 0346 636F6D70 		.ascii	"compare\000"
 1500      61726500 
 1501              	.LASF36:
 1502 034e 50574D5F 		.ascii	"PWM_1_Start\000"
 1502      315F5374 
 1502      61727400 
 1503              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
